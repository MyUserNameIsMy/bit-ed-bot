import { Injectable } from '@nestjs/common';
import { Ctx, Hears, On, Scene, SceneEnter } from 'nestjs-telegraf';
import { SceneContext } from 'telegraf/typings/scenes';
import { ISession } from '../../../common/interfaces/session.interface';

@Injectable()
@Scene('submitReport')
export class SubmitReportScene {
  constructor() {}
  @SceneEnter()
  async enter(@Ctx() ctx: SceneContext & ISession) {
    await ctx.reply(
      `**–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ—Ç—á–µ—Ç –≤ –≤–≤–∏–¥–µ —Ñ–∞–π–ª–æ–≤ –∏–ª–∏ —Ñ–æ—Ç–æ/—Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –∏–ª–∏ —Ç–µ–∫—Å—Ç–∞. –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ ** *–ú–µ–Ω—é* **–∏** *–ú–µ–Ω—é –±–æ—Ç–∞* **–∏–ª–∏** *–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.*`,
      {
        parse_mode: 'Markdown',
      },
    );
  }
  @Hears('/menu')
  async returnBase(@Ctx() ctx: SceneContext) {
    await ctx.scene.enter('base');
  }

  @Hears('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
  async returnBase2(@Ctx() ctx: SceneContext) {
    await ctx.scene.enter('base');
  }

  @On('message')
  async echoChannel(@Ctx() ctx: SceneContext & ISession) {
    await ctx.forwardMessage('-4085369060');
  }
}
